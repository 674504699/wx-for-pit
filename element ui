// property:属性名
// 用法:arr.sort(compare(key))
export const compare = property => {
  return function(a, b) {
    let value1 = a[property];
    let value2 = b[property];
    return value1 - value2;
  }
}
//针对Element-ui的表格搜索分页进行处理
// param:请求时代的搜索参数
//返回值：处理好的param
export const isSearch = param => {
  Object.keys(param).forEach(key => {
    if(param[key] && key != 'size' &&  key != 'current' ){
      param['size'] = 10;
      param['current'] = 1;
    }
  })
  return param
}

//element-ui自定义排序方案
//后台需求：descs（降）ascs（升）为键  要排序的字段为值
//返回值:处理过的请求参数
export const sortParams = (val,row,param) => {
  delete param["descs"];
  delete param["ascs"];
  let order = val.order || "descs";
  let key = order.startsWith("a") ? "ascs" : "descs";
  param[key] = toLine(val.prop);
  return param;
}



//正则

let rule = {};

//验证elementUi表单输入

//验证是否为空
rule.noEmpty = (rule, value, callback) => 
  value == '' ? callback(new Error('请完整填写该项')) : callback();

//正整数
rule.mustInt = (rule, value, callback) => {
  let exp = /^\+?[1-9][0-9]*$/;
  exp.test(value) ? callback() : callback(new Error('请填写正确格式(正整数)'));
};

//钱正则
rule.money = (rule, value, callback) => {
  let exp = /^[1-9]+\d*(\.\d{0,2})?$|^0?\.\d{0,2}$/;
  exp.test(value) ? callback() : callback(new Error('请填写正确格式(正数,小数点后最多两位)'));
};

//电话正则
rule.telExe = (rule,value,callback) => {
  let txe = /^1[3456789]\d{9}$/;
  txe.test(value) ? callback() : callback(new Error("手机号格式不正确"));
}

export default rule;
